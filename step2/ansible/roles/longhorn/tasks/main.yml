---
- name: Download Longhorn deployment manifest
  get_url:
    url: https://raw.githubusercontent.com/longhorn/longhorn/v1.6.1/deploy/longhorn.yaml
    dest: /tmp/longhorn.yaml
    mode: '0644'
  environment:
    http_proxy: ""
    https_proxy: ""
  when: inventory_hostname == groups['master'][0]
  tags: longhorn

- name: Download Longhorn iscsi deployment manifest
  get_url:
    url: https://raw.githubusercontent.com/longhorn/longhorn/v1.8.0/deploy/prerequisite/longhorn-iscsi-installation.yaml
    dest: /tmp/longhorn-iscsi-installation.yaml
    mode: '0644'
  environment:
    http_proxy: ""
    https_proxy: ""
  when: inventory_hostname == groups['master'][0]
  tags: longhorn

- name: Check if Longhorn namespace exists
  shell: kubectl get ns {{ longhorn_namespace }} --no-headers
  register: longhorn_ns
  failed_when: false
  changed_when: false
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  when: inventory_hostname == groups['master'][0]
  tags: longhorn

- name: Create Longhorn namespace if not exists
  command: kubectl create namespace {{ longhorn_namespace }}
  when:
    - inventory_hostname == groups['master'][0]
    - longhorn_ns.rc != 0
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  tags: longhorn

- name: Check if Longhorn was already applied
  stat:
    path: /var/lib/longhorn-applied.marker
  register: longhorn_marker
  tags: longhorn

- name: Check if Longhorn iSCSI was already applied
  stat:
    path: /var/lib/longhorn-iscsi-applied.marker
  register: longhorn_iscsi_marker
  tags: longhorn

- name: Apply Longhorn iSCSI manifest if not already applied
  shell: kubectl apply -f /tmp/longhorn-iscsi-installation.yaml
  args:
    creates: /var/lib/longhorn-iscsi-applied.marker
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
    http_proxy: ""
    https_proxy: ""
  register: apply_iscsi
  when:
    - inventory_hostname == groups['master'][0]
    - not longhorn_iscsi_marker.stat.exists
  tags: longhorn

- name: Mark iSCSI manifest as applied
  file:
    path: /var/lib/longhorn-iscsi-applied.marker
    state: touch
  when:
    - inventory_hostname == groups['master'][0]
    - apply_iscsi.changed
  tags: longhorn

- name: Apply Longhorn manifest if not already applied
  shell: kubectl apply -f /tmp/longhorn.yaml
  args:
    creates: /var/lib/longhorn-applied.marker
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
    http_proxy: ""
    https_proxy: ""
  register: apply_longhorn
  when: 
    - inventory_hostname == groups['master'][0]
    - not longhorn_marker.stat.exists
  tags: longhorn

- name: Mark Longhorn manifest as applied
  file:
    path: /var/lib/longhorn-applied.marker
    state: touch
  when:
    - inventory_hostname == groups['master'][0]
    - apply_longhorn.changed
  tags: longhorn
